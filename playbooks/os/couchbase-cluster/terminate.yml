- name: Terminate instance(s)
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
  - vars.yml
  tasks:
  - set_fact: cluster_group=meta-env_{{ cluster_id }}
  - add_host:
      name: "{{ item }}"
      groups: oo_hosts_to_terminate
      ansible_ssh_user: "{{ deployment_vars[deployment_type].ssh_user }}"
      ansible_sudo: "{{ deployment_vars[deployment_type].sudo }}"
    with_items: groups[cluster_group] | default([])

- hosts: oo_hosts_to_terminate

- hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
  - vars.yml
  tasks:
  - name: Retrieve the floating IPs
    shell: "neutron floatingip-list | awk '/{{ hostvars[item].ansible_default_ipv4.address }}/ {print $2}'"
    with_items: groups['oo_hosts_to_terminate'] | default([])
    register: floating_ips_to_delete

  - name: Terminate instance(s)
    nova_compute:
      name: "{{ item }}"
      state: absent
    with_items: groups['oo_hosts_to_terminate'] | default([])

  - name: Delete floating IPs
    command: "neutron floatingip-delete {{ item.stdout }}"
    with_items: floating_ips_to_delete.results | default([])

  - name: Remove interface
    command: "neutron router-interface-delete {{ openstack_network_prefix }}-router {{ openstack_network_prefix }}-subnet"

  - name: Destroy router
    command: "neutron router-delete {{ openstack_network_prefix }}-router"

  - name: Destroy the network
    command: "neutron net-delete {{ openstack_network_prefix }}-net"

  - name: Destroy security group
    command: "neutron security-group-delete {{ openstack_network_prefix }}-secgrp"
