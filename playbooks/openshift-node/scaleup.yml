---
- import_playbook: ../init/evaluate_groups.yml

- name: Ensure there are new_nodes
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
  - fail:
      msg: >
        Detected no new_nodes in inventory. Please add hosts to the
        new_nodes host group to add nodes.
    when:
    - g_new_node_hosts | default([]) | length == 0
  - fail:
      msg: >
        Please run playbooks/openshift-master/scaleup.yml if you need to
        scale up both masters and nodes.  This playbook is only needed if
        you are only adding new nodes and not new masters.
    when:
    - g_new_node_hosts | default([]) | length > 0
    - g_new_master_hosts | default([]) | length > 0

# if g_new_node_hosts is not empty, oo_nodes_to_config will be set to
# g_new_node_hosts via evaluate_groups.yml

- name: run the init
  import_playbook: ../init/main.yml
  vars:
    l_init_fact_hosts: "masters:new_nodes"
    l_openshift_version_set_hosts: "new_nodes"
    l_install_base_packages: True
    l_repo_hosts: "new_nodes"

- name: install nodes
  hosts: new_nodes
  vars:
    openshift_bootstrap_endpoint: "https://{{ openshift_install_config['metadata']['name'] }}-api.{{ openshift_install_config['baseDomain'] }}:49500/config/worker"
  roles:
  - role: container_runtime
  tasks:
  - import_role:
      name: container_runtime
      tasks_from: docker_storage_setup_overlay.yml
  - import_role:
      name: container_runtime
      tasks_from: extra_storage_setup.yml
  - import_role:
      name: container_runtime
      tasks_from: package_crio.yml
  - import_role:
      name: openshift_node40
      tasks_from: install.yml

- name: Start workers
  hosts: new_nodes
  vars:
    openshift_bootstrap_endpoint: "https://{{ openshift_install_config['metadata']['name'] }}-api.{{ openshift_install_config['baseDomain'] }}:49500/config/worker"
  tasks:
  - name: Wait for bootstrap endpoint to show up
    uri:
      url: "{{ openshift_bootstrap_endpoint }}"
      validate_certs: false
    delay: 10
    retries: 60
    register: result
    until:
    - "'status' in result"
    - result.status == 200
  - import_role:
      name: openshift_node40
      tasks_from: config.yml
