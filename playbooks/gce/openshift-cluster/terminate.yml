---
- name: Terminate instance(s)
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
  - vars.yml
  tasks:
  - set_fact: scratch_group=tag_env-{{ cluster_id }}
  - add_host:
      name: "{{ item }}"
      groups: oo_hosts_to_terminate
      ansible_ssh_user: "{{ deployment_vars[deployment_type].ssh_user | default(ansible_ssh_user, true) }}"
      ansible_sudo: "{{ deployment_vars[deployment_type].sudo }}"
    with_items: groups[scratch_group] | default([], true) | difference(['localhost']) | difference(groups.status_terminated | default([], true))

- name: Unsubscribe VMs
  hosts: oo_hosts_to_terminate
  vars_files:
  - vars.yml
  roles:
  - role: rhel_unsubscribe
    when: deployment_type == "enterprise" and
          ansible_distribution == "RedHat" and
          lookup('oo_option', 'rhel_skip_subscription') | default(rhsub_skip, True) |
            default('no', True) | lower in ['no', 'false']

- name: Terminate instances(s)
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
  - vars.yml
  tasks:

    - name: Terminate instances that were previously launched
      local_action:
        module: gce
        state: 'absent'
        name: "{{ item }}"
        service_account_email: "{{ lookup('env', 'gce_service_account_email_address') }}"
        pem_file: "{{ lookup('env', 'gce_service_account_pem_file_path') }}"
        project_id: "{{ lookup('env', 'gce_project_id') }}"
        zone: "{{ lookup('env', 'zone') }}"
      with_items: groups['oo_hosts_to_terminate'] | default([], true)
      when: item is defined

#- include: ../openshift-node/terminate.yml
#  vars:
#    gce_service_account_email: "{{ lookup('env', 'gce_service_account_email_address') }}"
#    gce_pem_file: "{{ lookup('env', 'gce_service_account_pem_file_path') }}"
#    gce_project_id: "{{ lookup('env', 'gce_project_id') }}"
#
#- include: ../openshift-master/terminate.yml
#  vars:
#    gce_service_account_email: "{{ lookup('env', 'gce_service_account_email_address') }}"
#    gce_pem_file: "{{ lookup('env', 'gce_service_account_pem_file_path') }}"
#    gce_project_id: "{{ lookup('env', 'gce_project_id') }}"
