---
- fail:
    msg: Verify OpenShift is already installed
  when: openshift.common.version is not defined

- fail:
    msg: Verify the correct version was found
  when: verify_upgrade_version is defined and openshift_version != verify_upgrade_version

- name: Clean package cache
  command: "{{ ansible_pkg_mgr }} clean all"
  when: not openshift.common.is_atomic | bool

- set_fact:
    g_new_service_name: "{{ 'origin' if deployment_type =='origin' else 'atomic-openshift' }}"
  when: not openshift.common.is_containerized | bool

- name: Verify containers are available for upgrade
  command: >
    docker pull {{ openshift.common.cli_image }}:{{ openshift_image_tag }}
  register: pull_result
  changed_when: "'Downloaded newer image' in pull_result.stdout"
  when: openshift.common.is_containerized | bool

- block:
  - name: Check latest available OpenShift RPM version
    repoquery:
      name: "{{ openshift.common.service_type }}"
      ignore_excluders: true
    register: repoquery_out

  - name: Fail when {{ openshift.common.service_type }} package is not found
    fail:
      msg: "Package {{ openshift.common.service_type }} not found"
    when: not repoquery_out.results.package_found

  - name: Set fact avail_openshift_version
    set_fact:
      avail_openshift_version: "{{ repoquery_out.results.versions.available_versions.0 }}"

  - name: Verify OpenShift RPMs are available for upgrade
    fail:
      msg: "OpenShift {{ avail_openshift_version }} is available, but {{ openshift_upgrade_target }} or greater is required"
    when:
    - avail_openshift_version | default('0.0', True) | version_compare(openshift_release, '<')

  when: not openshift.common.is_containerized | bool

- fail:
    msg: "This upgrade playbook must be run against OpenShift {{ openshift_upgrade_min }} or later"
  when: deployment_type == 'origin' and openshift.common.version | version_compare(openshift_upgrade_min,'<')
