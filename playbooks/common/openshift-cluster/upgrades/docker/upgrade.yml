---
# We need docker service up to remove all the images, but these services will keep
# trying to re-start and thus re-pull the images we're trying to delete.
- name: Stop containerized services
  service: name={{ item }} state=stopped
  with_items:
    - "{{ openshift.common.service_type }}-master"
    - "{{ openshift.common.service_type }}-master-api"
    - "{{ openshift.common.service_type }}-master-controllers"
    - "{{ openshift.common.service_type }}-node"
    - etcd_container
    - openvswitch
  failed_when: false
  when: openshift.common.is_containerized | bool

- name: Check Docker image count
  shell: "docker images -aq | wc -l"
  register: docker_image_count

- debug: var=docker_image_count.stdout

- name: Remove all containers and images
  script: nuke_images.sh docker
  register: nuke_images_result
  when: docker_upgrade_nuke_images is defined and docker_upgrade_nuke_images | bool

- name: Check Docker image count
  shell: "docker images -aq | wc -l"
  register: docker_image_count
  when: docker_upgrade_nuke_images is defined and docker_upgrade_nuke_images | bool

- debug: var=docker_image_count.stdout
  when: docker_upgrade_nuke_images is defined and docker_upgrade_nuke_images | bool

- service: name=docker state=stopped

- name: Upgrade Docker
  action: "{{ ansible_pkg_mgr }} name=docker{{ '-' + docker_version }} state=present"

- service: name=docker state=started

- name: Update docker facts
  openshift_facts:
    role: docker

- name: Restart containerized services
  service: name={{ item }} state=started
  with_items:
    - etcd_container
    - openvswitch
    - "{{ openshift.common.service_type }}-master"
    - "{{ openshift.common.service_type }}-master-api"
    - "{{ openshift.common.service_type }}-master-controllers"
    - "{{ openshift.common.service_type }}-node"
  failed_when: false
  when: openshift.common.is_containerized | bool

- name: Wait for master API to come back online
  become: no
  local_action:
    module: wait_for
      host="{{ inventory_hostname }}"
      state=started
      delay=10
      port="{{ openshift.master.api_port }}"
  when: inventory_hostname in groups.oo_masters_to_config
