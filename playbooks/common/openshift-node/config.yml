---
- name: Evaluate node groups
  hosts: localhost
  become: no
  connection: local
  tasks:
  - name: Evaluate oo_containerized_master_nodes
    add_host:
      name: "{{ item }}"
      groups: oo_containerized_master_nodes
      ansible_ssh_user: "{{ g_ssh_user | default(omit) }}"
      ansible_sudo: "{{ g_sudo | default(omit) }}"
    with_items: "{{ groups.oo_nodes_to_config | default([]) }}"
    when: hostvars[item].openshift.common.is_containerized | bool and (item in groups.oo_nodes_to_config and item in groups.oo_masters_to_config)

- name: Configure node instances
  hosts: oo_containerized_master_nodes
  serial: 1
  vars:
    openshift_node_master_api_url: "{{ hostvars[groups.oo_first_master.0].openshift.master.api_url }}"
    openshift_node_first_master_ip: "{{ hostvars[groups.oo_first_master.0].openshift.common.ip }}"
    # TODO: configure these based on
    # hostvars[groups.oo_first_master.0].openshift.hosted.registry instead of
    # hardcoding
    openshift_docker_hosted_registry_insecure: True
    openshift_docker_hosted_registry_network: "{{ hostvars[groups.oo_first_master.0].openshift.master.portal_net }}"
  roles:
  - role: openshift_node
    openshift_certificates_ca_host: "{{ groups.oo_first_master.0 }}"
  - role: openshift_manage_node
    openshift_manage_node_master_host: "{{ groups.oo_first_master.0 }}"

- name: Configure node instances
  hosts: oo_nodes_to_config:!oo_containerized_master_nodes
  vars:
    openshift_node_master_api_url: "{{ hostvars[groups.oo_first_master.0].openshift.master.api_url }}"
    openshift_node_first_master_ip: "{{ hostvars[groups.oo_first_master.0].openshift.common.ip }}"
    # TODO: configure these based on
    # hostvars[groups.oo_first_master.0].openshift.hosted.registry instead of
    # hardcoding
    openshift_docker_hosted_registry_insecure: True
    openshift_docker_hosted_registry_network: "{{ hostvars[groups.oo_first_master.0].openshift.master.portal_net }}"
  roles:
  - role: openshift_node
    openshift_certificates_ca_host: "{{ groups.oo_first_master.0 }}"
  - role: openshift_manage_node
    openshift_manage_node_master_host: "{{ groups.oo_first_master.0 }}"

- name: Additional node config
  hosts: oo_nodes_to_config
  roles:
  - role: openshift_flannel
    etcd_urls: "{{ hostvars[groups.oo_first_master.0].openshift.master.etcd_urls }}"
    embedded_etcd: "{{ hostvars[groups.oo_first_master.0].openshift.master.embedded_etcd }}"
    etcd_cert_subdir: "openshift-node-{{ openshift.common.hostname }}"
    etcd_cert_config_dir: "{{ openshift.common.config_base }}/node"
    etcd_certificates_ca_host: "{{ groups.oo_etcd_to_config.0 }}"
    etcd_peers: "{{ groups.oo_etcd_to_config }}"
    etcd_hostname: "{{ openshift.common.hostname }}"
    etcd_ip: "{{ openshift.common.ip }}"
    when: openshift.common.use_flannel | bool
  - role: nuage_node
    when: openshift.common.use_nuage | bool
  - role: nickhammond.logrotate
  tasks:
  - name: Create group for deployment type
    group_by: key=oo_nodes_deployment_type_{{ openshift.common.deployment_type }}
    changed_when: False

- name: Additional instance config for online deployments
  hosts: oo_nodes_deployment_type_online
  gather_facts: no
  roles:
  - os_env_extras
  - os_env_extras_node
