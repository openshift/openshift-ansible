---
- name: Master Install Checkpoint Start
  hosts: all
  gather_facts: false
  tasks:
  - name: Set Master install 'In Progress'
    run_once: true
    set_stats:
      data:
        installer_phase_master:
          status: "In Progress"
          start: "{{ lookup('pipe', 'date +%Y%m%d%H%M%SZ') }}"

- import_playbook: certificates.yml

- name: Disable excluders
  hosts: oo_masters_to_config
  gather_facts: no
  roles:
  - role: openshift_excluder
    r_openshift_excluder_action: disable

- name: Gather and set facts for master hosts
  hosts: oo_masters_to_config
  pre_tasks:
  # Per https://bugzilla.redhat.com/show_bug.cgi?id=1469336
  #
  # When scaling up a cluster upgraded from OCP <= 3.5, ensure that
  # OPENSHIFT_DEFAULT_REGISTRY is present as defined on the existing
  # masters, or absent if such is the case.
  - name: Detect if this host is a new master in a scale up
    set_fact:
      g_openshift_master_is_scaleup: "{{ inventory_hostname in ( groups['new_masters'] | default([]) ) }}"

  - name: Scaleup Detection
    debug:
      var: g_openshift_master_is_scaleup

  - name: Check for RPM generated config marker file .config_managed
    stat:
      path: /etc/origin/.config_managed
    register: rpmgenerated_config

  - name: Remove RPM generated config files if present
    file:
      path: "/etc/origin/{{ item }}"
      state: absent
    when:
    - rpmgenerated_config.stat.exists == true
    - openshift_deployment_type == 'openshift-enterprise'
    with_items:
    - master
    - node
    - .config_managed

  roles:
  - openshift_facts
  post_tasks:
  - openshift_facts:
      role: master
      local_facts:
        api_port: "{{ openshift_master_api_port | default(None) }}"
        api_url: "{{ openshift_master_api_url | default(None) }}"
        api_use_ssl: "{{ openshift_master_api_use_ssl | default(None) }}"
        controllers_port: "{{ openshift_master_controllers_port | default(None) }}"
        public_api_url: "{{ openshift_master_public_api_url | default(None) }}"
        cluster_hostname: "{{ openshift_master_cluster_hostname | default(None) }}"
        cluster_public_hostname: "{{ openshift_master_cluster_public_hostname | default(None) }}"
        console_path: "{{ openshift_master_console_path | default(None) }}"
        console_port: "{{ openshift_master_console_port | default(None) }}"
        console_url: "{{ openshift_master_console_url | default(None) }}"
        console_use_ssl: "{{ openshift_master_console_use_ssl | default(None) }}"
        public_console_url: "{{ openshift_master_public_console_url | default(None) }}"
        master_count: "{{ openshift_master_count | default(groups.oo_masters | length) }}"

- name: Inspect state of first master config settings
  hosts: oo_first_master
  roles:
  - role: openshift_facts
  tasks:
  - import_role:
      name: openshift_master
      tasks_from: check_existing_config.yml

- name: Configure masters
  hosts: oo_masters_to_config
  any_errors_fatal: true
  vars:
    openshift_master_count: "{{ openshift.master.master_count }}"
    openshift_ca_host: "{{ groups.oo_first_master.0 }}"
  pre_tasks:
  # This will be moved into the control plane role once openshift_master is removed
  - name: Add static pod and systemd shim commands
    import_role:
      name: openshift_control_plane
      tasks_from: static_shim
  - name: Prepare the bootstrap node config on masters for self-hosting
    import_role:
      name: openshift_node_group
      tasks_from: bootstrap
    when: openshift_master_bootstrap_enabled | default(false) | bool

  roles:
  - role: openshift_master_facts
  - role: openshift_clock
  - role: openshift_cloud_provider
    when: openshift_cloudprovider_kind is defined
  - role: openshift_builddefaults
  - role: openshift_buildoverrides
  - role: nickhammond.logrotate

  # DEPRECATED: begin moving away from this
  - role: openshift_master
    openshift_master_ha: "{{ (groups.oo_masters | length > 1) | bool }}"
    openshift_master_hosts: "{{ groups.oo_masters_to_config }}"
    r_openshift_master_clean_install: "{{ hostvars[groups.oo_first_master.0].l_clean_install }}"
    r_openshift_master_etcd3_storage: "{{ hostvars[groups.oo_first_master.0].l_etcd3_enabled }}"
    openshift_master_is_scaleup_host: "{{ g_openshift_master_is_scaleup | default(false) }}"
    openshift_master_default_registry_value: "{{ hostvars[groups.oo_first_master.0].l_default_registry_value }}"
    openshift_master_default_registry_value_api: "{{ hostvars[groups.oo_first_master.0].l_default_registry_value_api }}"
    openshift_master_default_registry_value_controllers: "{{ hostvars[groups.oo_first_master.0].l_default_registry_value_controllers }}"
    when: not ( openshift_master_bootstrap_enabled | default(false) | bool )

  - role: openshift_control_plane
    when: openshift_master_bootstrap_enabled | default(false) | bool
  - role: tuned
  - role: nuage_ca
    when: openshift_use_nuage | default(false) | bool
  - role: nuage_common
    when: openshift_use_nuage | default(false) | bool
  - role: nuage_master
    when: openshift_use_nuage | default(false) | bool
  - role: calico_master
    when: openshift_use_calico | default(false) | bool
  tasks:
  - name: Set up automatic node config reconcilation
    import_role:
      name: openshift_node_group
      tasks_from: sync
  - import_role:
      name: kuryr
      tasks_from: master
    when: openshift_use_kuryr | default(false) | bool

  - name: setup bootstrap settings
    include_tasks: tasks/enable_bootstrap.yml
    when: openshift_master_bootstrap_enabled | default(false) | bool

  post_tasks:
  - name: Create group for deployment type
    group_by: key=oo_masters_deployment_type_{{ openshift_deployment_type }}
    changed_when: False

- name: Configure API Aggregation on masters
  hosts: oo_masters
  serial: 1
  roles:
  - role: openshift_facts
  tasks:
  - include_tasks: tasks/wire_aggregator.yml

- name: Re-enable excluder if it was previously enabled
  hosts: oo_masters_to_config
  gather_facts: no
  roles:
  - role: openshift_excluder
    r_openshift_excluder_action: enable

- name: Master Install Checkpoint End
  hosts: all
  gather_facts: false
  tasks:
  - name: Set Master install 'Complete'
    run_once: true
    set_stats:
      data:
        installer_phase_master:
          status: "Complete"
          end: "{{ lookup('pipe', 'date +%Y%m%d%H%M%SZ') }}"
