---
- name: Ensure that all non-node hosts are accessible
  hosts: oo_masters_to_config:oo_etcd_to_config:oo_lb_to_config:oo_nfs_to_config
  any_errors_fatal: true
  tasks:

- name: Initialize host facts
  # l_upgrade_non_node_hosts is passed in via play during control-plane-only
  # upgrades; otherwise oo_all_hosts is used.
  hosts: "{{ l_upgrade_non_node_hosts | default('oo_all_hosts') }}"
  tasks:
  - name: load openshift_facts module
    import_role:
      name: openshift_facts

  # TODO: Should this role be refactored into health_checks??
  - name: Run openshift_sanitize_inventory to set variables
    import_role:
      name: openshift_sanitize_inventory

  - name: Detecting Operating System from ostree_booted
    stat:
      path: /run/ostree-booted
    register: ostree_booted

  # TODO(michaelgugino) remove this line once CI is updated.
  - name: set openshift_deployment_type if unset
    set_fact:
      openshift_deployment_type: "{{ deployment_type }}"
    when:
    - openshift_deployment_type is undefined
    - deployment_type is defined

  - name: initialize_facts set fact openshift_is_atomic and openshift_is_containerized
    set_fact:
      openshift_is_atomic: "{{ ostree_booted.stat.exists }}"
      openshift_is_containerized: "{{ ostree_booted.stat.exists or (containerized | default(false) | bool) }}"

  # TODO: Should this be moved into health checks??
  # Seems as though any check that happens with a corresponding fail should move into health_checks
  # Fail as early as possible if Atomic and old version of Docker
  - when:
    - openshift_is_atomic | bool
    block:

    # See https://access.redhat.com/articles/2317361
    # and https://github.com/ansible/ansible/issues/15892
    # NOTE: the "'s can not be removed at this level else the docker command will fail
    # NOTE: When ansible >2.2.1.x is used this can be updated per
    # https://github.com/openshift/openshift-ansible/pull/3475#discussion_r103525121
    - name: Determine Atomic Host Docker Version
      shell: 'CURLY="{"; docker version --format "$CURLY{json .Server.Version}}"'
      register: l_atomic_docker_version

    - name: assert atomic host docker version is 1.12 or later
      assert:
        that:
        - l_atomic_docker_version.stdout | replace('"', '') is version_compare('1.12','>=')
        msg: Installation on Atomic Host requires Docker 1.12 or later. Please upgrade and restart the Atomic Host.

  - name: Gather Cluster facts
    openshift_facts:
      role: common
      local_facts:
        deployment_type: "{{ openshift_deployment_type }}"
        deployment_subtype: "{{ openshift_deployment_subtype | default(None) }}"
        hostname: "{{ openshift_hostname | default(None) }}"
        ip: "{{ openshift_ip | default(None) }}"
        public_hostname: "{{ openshift_public_hostname | default(None) }}"
        public_ip: "{{ openshift_public_ip | default(None) }}"
        portal_net: "{{ openshift_portal_net | default(openshift_master_portal_net) | default(None) }}"
        http_proxy: "{{ openshift_http_proxy | default(None) }}"
        https_proxy: "{{ openshift_https_proxy | default(None) }}"
        no_proxy: "{{ openshift_no_proxy | default(None) }}"
        generate_no_proxy_hosts: "{{ openshift_generate_no_proxy_hosts | default(True) }}"

  - name: Set fact of no_proxy_internal_hostnames
    openshift_facts:
      role: common
      local_facts:
        no_proxy_internal_hostnames: "{{ hostvars | lib_utils_oo_select_keys(groups['oo_nodes_to_config']
                                             | union(groups['oo_masters_to_config'])
                                             | union(groups['oo_etcd_to_config'] | default([])))
                                         | lib_utils_oo_collect('openshift.common.hostname') | default([]) | join (',')
                                         }}"
    when:
    - openshift_http_proxy is defined or openshift_https_proxy is defined
    - openshift_generate_no_proxy_hosts | default(True) | bool

  - name: Initialize openshift.node.sdn_mtu
    openshift_facts:
      role: node
      local_facts:
        sdn_mtu: "{{ openshift_node_sdn_mtu | default(None) }}"

- name: Initialize special first-master variables
  hosts: oo_first_master
  roles:
  - role: openshift_facts
  tasks:
  - set_fact:
      # We need to setup openshift_client_binary here for special uses of delegate_to in
      # later roles and plays.
      first_master_client_binary: "{{  openshift_client_binary }}"
      #Some roles may require this to be set for first master
      openshift_client_binary: "{{ openshift_client_binary }}"
