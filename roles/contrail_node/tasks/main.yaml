---
- when:
  - docker_registry is not defined

  block:
  - name: Untar Contrail tar-file
    unarchive:
      src: "{{ contrail_docker_images_path }}/contrail-kubernetes-docker-images_{{ contrail_version }}.tgz"
      dest: "/tmp"

  - name: Load Contrail-vRouter-Agent image
    docker_image:
      name: contrail-agent
      tag: "{{ contrail_version }}"
      timeout: 300
      load_path: "/tmp/contrail-agent-{{ contrail_os_release }}-{{ contrail_version }}.tar.gz"

  - name: Load Contrail-Kubernetes-Agent image
    docker_image:
      name: contrail-k8s-agent
      tag: "{{ contrail_version }}"
      timeout: 300
      load_path: "/tmp/contrail-kubernetes-agent-{{ contrail_os_release }}-{{ contrail_version }}.tar.gz"
      
  - name: Ensure CNI bin path exists
    file:
      path: /opt/cni/bin
      recurse: yes
      state: directory

  - name: Download & extract loopback CNI binary
    unarchive:
      src: https://github.com/containernetworking/cni/releases/download/{{ cni_version }}/cni-{{ cni_version }}.tgz
      dest: /tmp
      remote_src: yes

  - name: Copy loopback to CNI bin path
    copy:
      src: /tmp/loopback
      dest: /opt/cni/bin
      mode: a+x
      remote_src: yes

- when:
  - inventory_hostname == "{{ contrail_first_master }}"

  block:
  - name: Add iptables rule to open Contrail-API service
    command: iptables -I INPUT 1 -p tcp --dport 8082 -j ACCEPT -m comment --comment "contrail-api"
    delegate_to: "{{ contrail_first_master }}"
  
  - name: Add contrail service account to privileged scc
    oc_adm_policy_user:
      user: system:serviceaccount:kube-system:contrail
      resource_kind: scc
      resource_name: privileged
      state: present
    delegate_to: "{{ contrail_first_master }}"

  - name: Add the daemonset-controller service account to privileged scc
    oc_adm_policy_user:
      user: system:serviceaccount:kube-system:daemon-set-controller
      resource_kind: scc
      resource_name: privileged
      state: present
    delegate_to: "{{ contrail_first_master }}"

  - name: Label master nodes with opencontrail.org/controller=true
    command: oc label nodes {{ openshift.common.hostname }} opencontrail.org/controller=true --overwrite=true
    delegate_to: "{{ contrail_first_master }}"

  - name: Make master schedulable
    command: oadm manage-node {{ openshift.common.hostname }} --schedulable
    delegate_to: "{{ contrail_first_master }}

  - name: Launch the installer
    command: oc create -f /tmp/contrail-installer.yaml
    delegate_to: "{{ contrail_first_master }}"
