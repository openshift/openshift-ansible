---
- name: Copy JKS generation script
  copy:
    src: import_jks_certs.sh
    dest: "{{openshift_metrics_certs_dir}}/import_jks_certs.sh"
  check_mode: no

- slurp: src={{ openshift_metrics_certs_dir }}/hawkular-metrics-keystore.pwd
  register: metrics_keystore_password

- slurp: src={{ openshift_metrics_certs_dir }}/hawkular-cassandra-keystore.pwd
  register: cassandra_keystore_password

- slurp: src={{ openshift_metrics_certs_dir }}/hawkular-jgroups-keystore.pwd
  register: jgroups_keystore_password

- stat: path="{{openshift_metrics_certs_dir}}/hawkular-metrics.keystore"
  register: metrics_keystore
  check_mode: no

- stat: path="{{openshift_metrics_certs_dir}}/hawkular-cassandra.keystore"
  register: cassandra_keystore
  check_mode: no

- stat: path="{{openshift_metrics_certs_dir}}/hawkular-cassandra.truststore"
  register: cassandra_truststore
  check_mode: no

- stat: path="{{openshift_metrics_certs_dir}}/hawkular-metrics.truststore"
  register: metrics_truststore
  check_mode: no

- stat: path="{{openshift_metrics_certs_dir}}/hawkular-jgroups.keystore"
  register: jgroups_keystore
  check_mode: no

- name: create JKS container
  command: >
    docker run
    -u 0
    -e "CERT_DIR={{openshift_metrics_certs_dir}}"
    -e "METRICS_KEYSTORE_PASSWD={{metrics_keystore_password.content}}"
    -e "CASSANDRA_KEYSTORE_PASSWD={{cassandra_keystore_password.content}}"
    -e "METRICS_TRUSTSTORE_PASSWD={{hawkular_truststore_password.content}}"
    -e "CASSANDRA_TRUSTSTORE_PASSWD={{cassandra_truststore_password.content}}"
    -e "JGROUPS_PASSWD={{jgroups_keystore_password.content}}"
    -v "{{openshift_metrics_certs_dir}}:{{openshift_metrics_certs_dir}}"
    --entrypoint="/bin/bash"
    "{{openshift_metrics_image_prefix}}metrics-deployer:{{openshift_metrics_image_version}}"
    "{{openshift_metrics_certs_dir}}/import_jks_certs.sh"
  register: container_out
  check_mode: no
  become: yes
  when: not metrics_keystore.stat.exists or
        not metrics_truststore.stat.exists or
        not cassandra_keystore.stat.exists or
        not cassandra_truststore.stat.exists or
        not jgroups_keystore.stat.exists
