---
- name: Install openssl
  package: name=openssl state=present
  when: not r_etcd_common_is_atomic | bool
  delegate_to: "{{ etcd_ca_host }}"
  run_once: true

- file:
    path: "{{ item }}"
    state: directory
    mode: 0700
    owner: root
    group: root
  with_items:
  - "{{ r_etcd_common_ca_new_certs_dir }}"
  - "{{ r_etcd_common_ca_crl_dir }}"
  - "{{ r_etcd_common_ca_dir }}/fragments"
  delegate_to: "{{ etcd_ca_host }}"
  run_once: true

- command: cp /etc/pki/tls/openssl.cnf ./
  args:
    chdir: "{{ r_etcd_common_ca_dir }}/fragments"
    creates: "{{ r_etcd_common_ca_dir }}/fragments/openssl.cnf"
  delegate_to: "{{ etcd_ca_host }}"
  run_once: true

- template:
    dest: "{{ r_etcd_common_ca_dir }}/fragments/openssl_append.cnf"
    src: openssl_append.j2
    backup: true
  delegate_to: "{{ etcd_ca_host }}"
  run_once: true

- assemble:
    src: "{{ r_etcd_common_ca_dir }}/fragments"
    dest: "{{ r_etcd_common_openssl_conf }}"
  delegate_to: "{{ etcd_ca_host }}"
  run_once: true

- name: Check r_etcd_common_ca_db exist
  stat: path="{{ r_etcd_common_ca_db }}"
  register: r_etcd_common_ca_db_check
  changed_when: false
  delegate_to: "{{ etcd_ca_host }}"
  run_once: true

- name: Touch r_etcd_common_ca_db file
  file:
    path: "{{ r_etcd_common_ca_db }}"
    state: touch
  when: r_etcd_common_ca_db_check.stat.isreg is not defined
  delegate_to: "{{ etcd_ca_host }}"
  run_once: true

- copy:
    dest: "{{ r_etcd_common_ca_serial }}"
    content: "01"
    force: no
  delegate_to: "{{ etcd_ca_host }}"
  run_once: true

- name: Create etcd CA certificate
  command: >
    openssl req -config {{ r_etcd_common_openssl_conf }} -newkey rsa:4096
    -keyout {{ r_etcd_common_ca_key }} -new -out {{ r_etcd_common_ca_cert }}
    -x509 -extensions {{ r_etcd_common_ca_exts_self }} -batch -nodes
    -days {{ r_etcd_common_ca_default_days }}
    -subj /CN=etcd-signer@{{ ansible_date_time.epoch }}
  args:
    chdir: "{{ r_etcd_common_ca_dir }}"
    creates: "{{ r_etcd_common_ca_cert }}"
  environment:
    SAN: 'etcd-signer'
  delegate_to: "{{ etcd_ca_host }}"
  run_once: true
