---
- block:

  # When openshift_hosted_manage_registry=true the openshift_hosted
  # role will create the appropriate route for the docker-registry.
  # When openshift_hosted_manage_registry=false then this code will
  # not be run.
  - name: fetch the docker-registry route
    oc_route:
      kubeconfig: "/etc/origin/master/admin.kubeconfig"
      name: docker-registry
      namespace: default
      state: list
    register: docker_registry_route

  - name: Create passthrough route for registry-console
    oc_route:
      kubeconfig: "/etc/origin/master/admin.kubeconfig"
      name: registry-console
      namespace: default
      service_name: registry-console
      state: present
      tls_termination: passthrough
    register: registry_console_cockpit_kube

  - name: Set registry-console params
    set_fact:
      l_registry_console_params:
        OPENSHIFT_OAUTH_PROVIDER_URL: "{{ openshift.master.public_api_url }}"
        REGISTRY_HOST: "{{ docker_registry_route.results[0].spec.host }}"
        COCKPIT_KUBE_URL: "https://{{ registry_console_cockpit_kube.results.results[0].spec.host }}"
        NODE_SELECTOR: "{{ openshift_hosted_registry_console_nodeselector | map_from_pairs }}"

  - name: Set image prefix
    set_fact:
      l_registry_console_params: >
       {{ l_registry_console_params | combine({"IMAGE_PREFIX": openshift_cockpit_deployer_prefix }) }}
    when: openshift_cockpit_deployer_prefix is defined

  - name: Set image basename
    set_fact:
      l_registry_console_params: >
        {{ l_registry_console_params | combine({"IMAGE_BASENAME": openshift_cockpit_deployer_basename }) }}
    when: openshift_cockpit_deployer_basename is defined

  - name: Set image version
    set_fact:
      l_registry_console_params: >
        {{ l_registry_console_params | combine({"IMAGE_VERSION": openshift_cockpit_deployer_version }) }}
    when: openshift_cockpit_deployer_version is defined

  - name: Deploy registry-console
    oc_process:
      namespace: "default"
      # use registry-console template from openshift namespace
      template_name: "openshift//registry-console"
      create: True
      params: "{{ l_registry_console_params }}"

  run_once: true
