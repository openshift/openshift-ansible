---
- name: Check for NetworkManager service
  command: >
    systemctl show NetworkManager
  register: nm_show
  changed_when: false
  ignore_errors: True

- name: Set fact using_network_manager
  set_fact:
    network_manager_active: "{{ True if 'ActiveState=active' in nm_show.stdout else False }}"

- name: Install dnsmasq
  package: name=dnsmasq state=installed
  when: not openshift.common.is_atomic | bool

- name: Remove older dnsmasq configuration files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/etc/dnsmasq.d/origin-upstream-dns.conf"
    - "/etc/dnsmasq.d/node-dnsmasq.conf"
    - "/etc/dnsmasq.d/origin-dns.conf"
  when: openshift.common.version_gte_3_7 | bool

- name: Deploy additional dnsmasq.conf
  template:
    src: "{{ openshift_node_dnsmasq_additional_config_file }}"
    dest: /etc/dnsmasq.d/openshift-ansible.conf
    owner: root
    group: root
    mode: 0644
  when: openshift_node_dnsmasq_additional_config_file is defined
  notify: restart dnsmasq

- name: Enable dnsmasq
  systemd:
    name: dnsmasq
    enabled: yes
    state: started

# Dynamic NetworkManager based dispatcher
- include: ./network-manager.yml
  when: network_manager_active | bool

# Relies on ansible in order to configure static config
- include: ./no-network-manager.yml
  when: not network_manager_active | bool

- name: Reconfigure the node for dnsmasq
  yedit:
    state: present
    src: /etc/origin/node/node-config.yaml
    edits:
      - key: "dnsBindAddress"
        value: "127.0.0.1:53"
      - key: "dnsRecursiveResolvConf"
        value: "/etc/origin/node/resolv.conf"
