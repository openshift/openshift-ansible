---
- name: Detecting Operating System
  stat:
    path: /run/ostree-booted
  register: ostree_booted

# Locally setup containerized facts for now
- set_fact:
    l_is_atomic: "{{ ostree_booted.stat.exists }}"
    l_use_crio: "{{ openshift_docker_use_crio | default(false) }}"
- set_fact:
    l_is_containerized: "{{ (l_is_atomic | bool) or (containerized | default(false) | bool) }}"
    l_is_openvswitch_system_container: "{{ (openshift_use_openvswitch_system_container | default(openshift_use_system_containers) | bool) }}"
    l_is_node_system_container: "{{ (openshift_use_node_system_container | default(openshift_use_system_containers) | bool) }}"
    l_is_master_system_container: "{{ (openshift_use_master_system_container | default(openshift_use_system_containers) | bool) }}"
    l_is_etcd_system_container: "{{ (openshift_use_etcd_system_container | default(openshift_use_system_containers) | bool) }}"
- set_fact:
    l_any_system_container: "{{ l_is_etcd_system_container or l_is_openvswitch_system_container or l_is_node_system_container or l_is_master_system_container }}"
- set_fact:
    l_etcd_runtime: "{{ 'runc' if l_is_etcd_system_container else 'docker' if l_is_containerized else 'host' }}"


- name: Validate python version
  fail:
    msg: |
      openshift-ansible requires Python 3 for {{ ansible_distribution }};
      For information on enabling Python 3 with Ansible, see https://docs.ansible.com/ansible/python_3_support.html
  when:
  - ansible_distribution == 'Fedora'
  - ansible_python['version']['major'] != 3
  - r_openshift_facts_ran is not defined

- name: Validate python version
  fail:
    msg: "openshift-ansible requires Python 2 for {{ ansible_distribution }}"
  when:
  - ansible_distribution != 'Fedora'
  - ansible_python['version']['major'] != 2
  - r_openshift_facts_ran is not defined

# Fail as early as possible if Atomic and old version of Docker
- block:

  # See https://access.redhat.com/articles/2317361
  # and https://github.com/ansible/ansible/issues/15892
  # NOTE: the "'s can not be removed at this level else the docker command will fail
  # NOTE: When ansible >2.2.1.x is used this can be updated per
  # https://github.com/openshift/openshift-ansible/pull/3475#discussion_r103525121
  - name: Determine Atomic Host Docker Version
    shell: 'CURLY="{"; docker version --format "$CURLY{json .Server.Version}}"'
    register: l_atomic_docker_version

  - assert:
      msg: Installation on Atomic Host requires Docker 1.12 or later. Please upgrade and restart the Atomic Host.
      that:
      - l_atomic_docker_version.stdout | replace('"', '') | version_compare('1.12','>=')

  when:
  - not l_use_crio
  - l_is_atomic | bool
  - r_openshift_facts_ran is not defined

- name: Load variables
  include_vars: "{{ item }}"
  with_first_found:
  - "{{ ansible_distribution }}.yml"
  - "default.yml"

- name: Ensure various deps are installed
  package: name={{ item }} state=present
  with_items: "{{ required_packages }}"
  when:
  - not l_is_atomic | bool
  - r_openshift_facts_ran is not defined

- name: Ensure various deps for running system containers are installed
  package: name={{ item }} state=present
  with_items: "{{ required_system_containers_packages }}"
  when:
  - not l_is_atomic | bool
  - l_any_system_container | bool
  - r_openshift_facts_ran is not defined

- name: Gather Cluster facts and set is_containerized if needed
  openshift_facts:
    role: common
    local_facts:
      debug_level: "{{ openshift_debug_level | default(2) }}"
      deployment_type: "{{ openshift_deployment_type }}"
      deployment_subtype: "{{ openshift_deployment_subtype | default(None) }}"
      cluster_id: "{{ openshift_cluster_id | default('default') }}"
      hostname: "{{ openshift_hostname | default(None) }}"
      ip: "{{ openshift_ip | default(None) }}"
      is_containerized: "{{ l_is_containerized | default(None) }}"
      is_openvswitch_system_container: "{{ l_is_openvswitch_system_container | default(false) }}"
      is_node_system_container: "{{ l_is_node_system_container | default(false) }}"
      is_master_system_container: "{{ l_is_master_system_container | default(false) }}"
      is_etcd_system_container: "{{ l_is_etcd_system_container | default(false) }}"
      etcd_runtime: "{{ l_etcd_runtime }}"
      system_images_registry: "{{ system_images_registry | default('') }}"
      public_hostname: "{{ openshift_public_hostname | default(None) }}"
      public_ip: "{{ openshift_public_ip | default(None) }}"
      portal_net: "{{ openshift_portal_net | default(openshift_master_portal_net) | default(None) }}"
      http_proxy: "{{ openshift_http_proxy | default(None) }}"
      https_proxy: "{{ openshift_https_proxy | default(None) }}"
      no_proxy: "{{ openshift_no_proxy | default(None) }}"
      generate_no_proxy_hosts: "{{ openshift_generate_no_proxy_hosts | default(True) }}"
      no_proxy_internal_hostnames: "{{ openshift_no_proxy_internal_hostnames | default(None) }}"
      sdn_network_plugin_name: "{{ os_sdn_network_plugin_name | default(None) }}"
      use_openshift_sdn: "{{ openshift_use_openshift_sdn | default(None) }}"

- name: Set repoquery command
  set_fact:
    repoquery_cmd: "{{ 'dnf repoquery --latest-limit 1 -d 0' if ansible_pkg_mgr == 'dnf' else 'repoquery --plugins' }}"

- name: Register that this already ran
  set_fact:
    r_openshift_facts_ran: True
