---
# input variables:
# - l_docker_upgrade
# - openshift_is_atomic
# - node_config_hook
# - openshift_pkg_version
# - openshift_is_containerized
# - openshift_release

# tasks file for openshift_node_upgrade

- name: stop services for upgrade
  include_tasks: upgrade/stop_services.yml

# Ensure actually install latest package.
- name: install docker upgrade rpm
  command: "{{ ansible_pkg_mgr }} install -y docker{{ '-' + docker_version }}"
  register: result
  until: result is succeeded
  when:
  - l_docker_upgrade is defined
  - l_docker_upgrade | bool

- name: install pre-pulled rpms.
  include_tasks: upgrade/rpm_upgrade_install.yml
  vars:
    openshift_version: "{{ openshift_pkg_version | default('') }}"
  when: not openshift_is_containerized | bool


- include_tasks: "{{ node_config_hook }}"
  when: node_config_hook is defined

- include_tasks: upgrade/config_changes.yml

- include_tasks: dnsmasq_install.yml
- include_tasks: dnsmasq.yml

# Restart all services
- include_tasks: upgrade/restart.yml

- name: Wait for node to be ready
  oc_obj:
    state: list
    kind: node
    name: "{{ openshift.common.hostname | lower }}"
  register: node_output
  delegate_to: "{{ groups.oo_first_master.0 }}"
  until: node_output.results.returncode == 0 and node_output.results.results[0].status.conditions | selectattr('type', 'match', '^Ready$') | map(attribute='status') | join | bool == True
  # Give the node two minutes to come back online.
  retries: 24
  delay: 5

- include_tasks: journald.yml

- meta: flush_handlers
