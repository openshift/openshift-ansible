---
- name: Update oreg value
  yedit:
    src: "{{ openshift.common.config_base }}/node/node-config.yaml"
    key: 'imageConfig.format'
    value: "{{ oreg_url | default(oreg_url_node) }}"
  when: oreg_url is defined or oreg_url_node is defined

- name: Ensure the node static pod directory exists
  file:
    path: "{{ openshift.common.config_base }}/node/pods"
    state: directory
    mode: 0755

- name: Ensure docker-registry directory exists
  file:
    state: directory
    path: "/etc/docker/certs.d/docker-registry.default.svc:5000"

- name: Update the docker-registry CA symlink
  file:
    src: "{{ openshift_node_config_dir }}/client-ca.crt"
    dest: "/etc/docker/certs.d/docker-registry.default.svc:5000/node-client-ca.crt"
    state: link
    force: yes
    follow: no

- name: Update node-config for static pods
  yedit:
    src: "{{ openshift.common.config_base }}/node/node-config.yaml"
    edits:
    - key: kubeletArguments.pod-manifest-path
      value:
      - "{{ openshift.common.config_base }}/node/pods"

# https://bugzilla.redhat.com/show_bug.cgi?id=1518912
# - name: Clean up IPAM data
#   file:
#     path: "/var/lib/cni/networks/openshift-sdn/"
#     state: absent

- name: Uninstall openvswitch
  package:
    name: openvswitch
    state: absent
  when: not (openshift_is_atomic | bool or openshift_use_nsx | bool)

- name: Remove old service information
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  - /etc/systemd/system/docker.service.d/docker-sdn-ovs.conf
  - /etc/systemd/system/atomic-openshift-node-dep.service
  - /etc/systemd/system/origin-node-dep.service

- name: Remove openvswitch service information
  file:
    path: /etc/systemd/system/openvswitch.service
    state: absent
  when: not openshift_use_nsx | bool

- name: Move existing credentials and configuration into bootstrap configuration
  import_tasks: bootstrap_changes.yml

- name: Reset selinux context
  command: restorecon -RF {{ openshift_node_data_dir }}/openshift.local.volumes
  when:
  - ansible_selinux is defined
  - ansible_selinux.status == 'enabled'

- name: Update systemd units
  import_tasks: ../systemd_units.yml

# Get stat of /etc/crio/crio.conf
- stat: path=/etc/crio/crio.conf
  register: crio_conf
# Update the cri-o pause image to use latest version after an upgrade
# if cri-o is the container runtime i.e /etc/crio/crio.conf exists
- name: Update cri-o pause image
  lineinfile:
    dest: /etc/crio/crio.conf
    line: pause_image = "{{ openshift_crio_pause_image }}"
    regexp: '^pause_image ='
  when: crio_conf.stat.exists == True

# NOTE: This is needed to make sure we are using the correct set
#       of systemd unit files. The RPMs lay down defaults but
#       the install/upgrade may override them in /etc/systemd/system/.
# NOTE: We don't use the systemd module as some versions of the module
#       require a service to be part of the call.
- name: Reload systemd units
  command: systemctl daemon-reload
