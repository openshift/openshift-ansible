---
- command: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get node -o name
  register: fluentd_hosts
  when: "'--all' in openshift_logging_fluentd_hosts"
  check_mode: no
  changed_when: no

- set_fact: openshift_logging_fluentd_hosts={{ fluentd_hosts.stdout_lines | regex_replace('node/', '') }}
  when: "'--all' in openshift_logging_fluentd_hosts"

- name: start fluentd
  oc_label:
    name: "{{ fluentd_host }}"
    kind: node
    state: add
    label: "{{ openshift_logging_fluentd_nodeselector }}"
    kubeconfig: "{{ mktemp.stdout }}/admin.kubeconfig"
  with_items: "{{ openshift_logging_fluentd_hosts }}"
  loop_control:
    loop_var: fluentd_host

- command: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get dc -l component=es -o name -n {{openshift_logging_namespace}}
  register: es_dc
  check_mode: no
  changed_when: no

- name: start elasticsearch
  oc_scale:
    kind: dc
    name: "{{object.split('/')[1]}}"
    namespace: "{{openshift_logging_namespace}}"
    kubeconfig: "{{mktemp.stdout}}/admin.kubeconfig"
    replicas: 1
  with_items: "{{es_dc.stdout_lines}}"
  loop_control:
    loop_var: object

- command: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get dc -l component=kibana -o name -n {{openshift_logging_namespace}}
  register: kibana_dc
  check_mode: no
  changed_when: no

- name: start kibana
  oc_scale:
    kind: dc
    name: "{{object.split('/')[1]}}"
    namespace: "{{openshift_logging_namespace}}"
    kubeconfig: "{{mktemp.stdout}}/admin.kubeconfig"
    replicas: "{{ openshift_logging_kibana_replica_count | default (1) }}"
  with_items: "{{kibana_dc.stdout_lines}}"
  loop_control:
    loop_var: object

- command: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get dc -l component=curator -o name -n {{openshift_logging_namespace}}
  register: curator_dc
  check_mode: no
  changed_when: no

- name: start curator
  oc_scale:
    kind: dc
    name: "{{object.split('/')[1]}}"
    namespace: "{{openshift_logging_namespace}}"
    kubeconfig: "{{mktemp.stdout}}/admin.kubeconfig"
    replicas: 1
  with_items: "{{curator_dc.stdout_lines}}"
  loop_control:
    loop_var: object

- command: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get dc -l component=es-ops -o name -n {{openshift_logging_namespace}}
  register: es_dc
  check_mode: no
  changed_when: no

- name: start elasticsearch-ops
  oc_scale:
    kind: dc
    name: "{{object.split('/')[1]}}"
    namespace: "{{openshift_logging_namespace}}"
    kubeconfig: "{{mktemp.stdout}}/admin.kubeconfig"
    replicas: 1
  with_items: "{{es_dc.stdout_lines}}"
  loop_control:
    loop_var: object
  when: openshift_logging_use_ops | bool

- command: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get dc -l component=kibana-ops -o name -n {{openshift_logging_namespace}}
  register: kibana_dc
  check_mode: no
  changed_when: no

- name: start kibana-ops
  oc_scale:
    kind: dc
    name: "{{object.split('/')[1]}}"
    namespace: "{{openshift_logging_namespace}}"
    kubeconfig: "{{mktemp.stdout}}/admin.kubeconfig"
    replicas: "{{ openshift_logging_kibana_ops_replica_count | default (1) }}"
  with_items: "{{kibana_dc.stdout_lines}}"
  loop_control:
    loop_var: object
  when: openshift_logging_use_ops | bool

- command: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get dc -l component=curator-ops -o name -n {{openshift_logging_namespace}}
  register: curator_dc
  check_mode: no
  changed_when: no

- name: start curator-ops
  oc_scale:
    kind: dc
    name: "{{object.split('/')[1]}}"
    namespace: "{{openshift_logging_namespace}}"
    kubeconfig: "{{mktemp.stdout}}/admin.kubeconfig"
    replicas: 1
  with_items: "{{curator_dc.stdout_lines}}"
  loop_control:
    loop_var: object
  when: openshift_logging_use_ops | bool
