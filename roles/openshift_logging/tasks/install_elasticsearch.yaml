---
- name: Getting current ES deployment size
  set_fact: openshift_logging_current_es_size={{ openshift_logging_facts.elasticsearch.deploymentconfigs.keys() | length }}

- name: Generate PersistentVolumeClaims
  include: "{{ role_path}}/tasks/generate_pvcs.yaml"
  vars:
    es_pv_selector: "{{openshift_logging_es_pv_selector}}"
    es_pvc_dynamic: "{{openshift_logging_es_pvc_dynamic | bool}}"
    es_pvc_names: "{{openshift_logging_facts.elasticsearch.pvcs.keys()}}"
    es_pvc_prefix: "{{openshift_logging_es_pvc_prefix}}"
    es_pvc_size: "{{openshift_logging_es_pvc_size}}"
    es_dc_names: "{{openshift_logging_facts.elasticsearch.deploymentconfigs.keys()}}"
    es_cluster_size: "{{openshift_logging_es_cluster_size}}"

# we should initialize the es_dc_pool with the current keys
- name: Init pool of DeploymentConfig names for Elasticsearch
  set_fact: es_dc_pool={{ es_dc_pool | default([]) + [deploy_name] }}
  with_items: "{{ openshift_logging_facts.elasticsearch.deploymentconfigs.keys() }}"
  loop_control:
    loop_var: deploy_name

# This should be used to generate new DC names if necessary
- name: Create new DeploymentConfig names for Elasticsearch
  set_fact: es_dc_pool={{es_dc_pool|default([]) + [deploy_name]}}
  vars:
    component: es
    es_cluster_name: "{{component}}"
    deploy_name_prefix: "logging-{{component}}"
    deploy_name: "{{deploy_name_prefix}}-{{'abcdefghijklmnopqrstuvwxyz0123456789'|random_word(8)}}"
  with_sequence: count={{ openshift_logging_es_cluster_size | int - openshift_logging_current_es_size | int }}
  check_mode: no

- name: Generate Elasticsearch DeploymentConfig
  template: src=es.j2 dest={{mktemp.stdout}}/templates/logging-{{deploy_name}}-dc.yaml
  vars:
    component: es
    logging_component: elasticsearch
    deploy_name_prefix: "logging-{{component}}"
    image: "{{openshift_logging_image_prefix}}logging-elasticsearch:{{openshift_logging_image_version}}"
    es_cluster_name: "{{component}}"
    es_cpu_limit: "{{openshift_logging_es_cpu_limit }}"
    es_memory_limit: "{{openshift_logging_es_memory_limit}}"
    volume_names: "{{es_pvc_pool | default([])}}"
    pvc_claim: "{{(volume_names | length > item.0) | ternary(volume_names[item.0], None)}}"
    deploy_name: "{{item.1}}"
    es_node_selector: "{{openshift_logging_es_nodeselector | default({})}}"
  with_indexed_items:
    - "{{ es_dc_pool }}"
  check_mode: no
  changed_when: no

# --------- Tasks for Operation clusters ---------

- name: Getting current ES deployment size
  set_fact: openshift_logging_current_es_ops_size={{ openshift_logging_facts.elasticsearch_ops.deploymentconfigs.keys() | length }}

- name: Validate Elasticsearch cluster size for Ops
  fail: msg="The openshift_logging_es_ops_cluster_size may not be scaled down more than 1 less (or 0) the number of Elasticsearch nodes already deployed"
  vars:
    es_dcs: "{{openshift_logging_facts.elasticsearch_ops.deploymentconfigs}}"
    cluster_size: "{{openshift_logging_es_ops_cluster_size|int}}"
  when:
    - openshift_logging_use_ops | bool
    - "{{es_dcs | length - openshift_logging_es_ops_cluster_size|int | abs > 1}}"
  check_mode: no

- set_fact: es_pvc_pool={{[]}}

- name: Generate PersistentVolumeClaims for Ops
  include: "{{ role_path}}/tasks/generate_pvcs.yaml"
  vars:
    es_pvc_names: "{{openshift_logging_facts.elasticsearch_ops.pvcs.keys()}}"
    es_dc_names: "{{openshift_logging_facts.elasticsearch_ops.deploymentconfigs.keys()}}"
    es_pvc_size: "{{openshift_logging_es_ops_pvc_size}}"
    es_pvc_prefix: "{{openshift_logging_es_ops_pvc_prefix}}"
    es_cluster_size: "{{openshift_logging_es_ops_cluster_size|int}}"
    es_pvc_dynamic: "{{openshift_logging_es_ops_pvc_dynamic | bool}}"
    es_pv_selector: "{{openshift_logging_es_ops_pv_selector}}"
  when:
    - openshift_logging_use_ops | bool
  check_mode: no

- name: Init pool of DeploymentConfig names for Elasticsearch Ops
  set_fact: es_ops_dc_pool={{ es_ops_dc_pool | default([]) + [deploy_name] }}
  with_items: "{{ openshift_logging_facts.elasticsearch_ops.deploymentconfigs.keys() }}"
  loop_control:
    loop_var: deploy_name
  when:
    - openshift_logging_use_ops | bool

- name: Create new DeploymentConfig names for Elasticsearch Ops
  set_fact: es_ops_dc_pool={{es_ops_dc_pool | default([]) + [deploy_name]}}
  vars:
    component: es-ops
    es_cluster_name: "{{component}}"
    deploy_name_prefix: "logging-{{component}}"
    deploy_name: "{{deploy_name_prefix}}-{{'abcdefghijklmnopqrstuvwxyz0123456789'|random_word(8)}}"
    cluster_size: "{{openshift_logging_es_ops_cluster_size|int}}"
  with_sequence: count={{ openshift_logging_es_ops_cluster_size | int - openshift_logging_current_es_ops_size | int }}
  when:
    - openshift_logging_use_ops | bool
  check_mode: no

- name: Generate Elasticsearch DeploymentConfig for Ops
  template: src=es.j2 dest={{mktemp.stdout}}/templates/logging-{{deploy_name}}-dc.yaml
  vars:
    component: es-ops
    logging_component: elasticsearch
    deploy_name_prefix: "logging-{{component}}"
    image: "{{openshift_logging_image_prefix}}logging-elasticsearch:{{openshift_logging_image_version}}"
    volume_names: "{{es_pvc_pool | default([])}}"
    pvc_claim: "{{(volume_names | length > item.0) | ternary(volume_names[item.0], None)}}"
    deploy_name: "{{item.1}}"
    es_cluster_name: "{{component}}"
    es_cpu_limit: "{{openshift_logging_es_ops_cpu_limit }}"
    es_memory_limit: "{{openshift_logging_es_ops_memory_limit}}"
    es_node_quorum: "{{es_ops_node_quorum}}"
    es_recover_after_nodes: "{{es_ops_recover_after_nodes}}"
    es_recover_expected_nodes: "{{es_ops_recover_expected_nodes}}"
    openshift_logging_es_recover_after_time: "{{openshift_logging_es_ops_recover_after_time}}"
    es_node_selector: "{{openshift_logging_es_ops_nodeselector | default({})}}"
  with_indexed_items:
    - "{{ es_ops_dc_pool | default([]) }}"
  when:
    - openshift_logging_use_ops | bool
  check_mode: no
  changed_when: no
