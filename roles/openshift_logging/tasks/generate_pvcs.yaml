---
- name: Init pool of PersistentVolumeClaim names
  set_fact: es_pvc_pool={{es_pvc_pool|default([]) + [pvc_name]}}
  vars:
    pvc_name: "{{es_pvc_prefix}}-{{item| int}}"
    start: "{{es_pvc_names | map('regex_search', es_pvc_prefix+'.*')|select('string')|list|length}}"
  with_sequence: start={{start}} end={{ (start|int > es_cluster_size|int - 1) | ternary(start, es_cluster_size|int - 1)}}
  when:
    - es_pvc_size | search('^\d.*')
    - "{{ es_dc_names|default([]) | length < es_cluster_size|int }}"
  check_mode: no

- name: Generating PersistentVolumeClaims
  template: src=pvc.j2 dest={{mktemp.stdout}}/templates/logging-{{obj_name}}-pvc.yaml
  vars:
    obj_name: "{{claim_name}}"
    size: "{{es_pvc_size}}"
    access_modes:
      - ReadWriteOnce
    pv_selector: "{{es_pv_selector}}"
  with_items:
    - "{{es_pvc_pool | default([])}}"
  loop_control:
    loop_var: claim_name
  when:
    - not es_pvc_dynamic
    - es_pvc_pool is defined
  check_mode: no
  changed_when: no

- name: Generating PersistentVolumeClaims - Dynamic
  template: src=pvc.j2 dest={{mktemp.stdout}}/templates/logging-{{obj_name}}-pvc.yaml
  vars:
    obj_name: "{{claim_name}}"
    annotations:
      volume.alpha.kubernetes.io/storage-class: "dynamic"
    size: "{{es_pvc_size}}"
    access_modes:
      - ReadWriteOnce
    pv_selector: "{{es_pv_selector}}"
  with_items:
    - "{{es_pvc_pool|default([])}}"
  loop_control:
    loop_var: claim_name
  when:
    - es_pvc_dynamic
    - es_pvc_pool is defined
  check_mode: no
  changed_when: no
