---
- set_fact:
    parsed_named_certificates: "{{ named_certificates | lib_utils_oo_parse_named_certificates(named_certs_dir, internal_hostnames) }}"
  when: named_certificates | length > 0
  delegate_to: localhost
  run_once: true

- openshift_facts:
    role: master
    local_facts:
      named_certificates: "{{ parsed_named_certificates | default([]) }}"
    additive_facts_to_overwrite:
    - "{{ 'master.named_certificates' if overwrite_named_certs | bool else omit }}"

- name: Clear named certificates
  file:
    path: "{{ named_certs_dir }}"
    state: absent
  when: overwrite_named_certs | bool

- name: Ensure named certificate directory exists
  file:
    path: "{{ named_certs_dir }}"
    state: directory
    mode: 0700

- name: Ensure temporary fragment directories exist for building full chain cert files
  file:
    path: "{{ named_certs_dir }}/fragments/{{ item.certfile | basename }}"
    state: directory
    mode: 0700
  with_items: "{{ named_certificates }}"

- name: Land named certificates in temporary fragment directories
  copy:
    src: "{{ item.certfile }}"
    dest: "{{ named_certs_dir }}/fragments/{{ item.certfile | basename }}/00_{{ item.certfile | basename }}"
  with_items: "{{ named_certificates }}"

- name: Land named certificate keys
  copy:
    src: "{{ item.keyfile }}"
    dest: "{{ named_certs_dir }}/{{ item.keyfile | basename }}"
    mode: 0600
  with_items: "{{ named_certificates }}"

- name: Land named CA certificates
  copy:
    src: "{{ item.cafile }}"
    dest: "{{ named_certs_dir }}/{{ item.cafile | basename }}"
    mode: 0600
  with_items: "{{ named_certificates }}"
  when: "'cafile' in item"

- name: Land named CA certificates in temporary fragment directories
  copy:
    src: "{{ item.cafile }}"
    dest: "{{ named_certs_dir }}/fragments/{{ item.certfile | basename }}/01_{{ item.cafile | basename }}"
    mode: 0600
  with_items: "{{ named_certificates }}"
  when: "'cafile' in item"

- name: Compile cert files from fragments
  assemble:
    src: "{{ named_certs_dir }}/fragments/{{ item.certfile | basename }}"
    dest: "{{ named_certs_dir }}/{{ item.certfile | basename }}"
    mode: 0600
    validate: "openssl verify %s"
  with_items: "{{ named_certificates }}"

- name: Clear out fragments
  file:
    path: "{{ named_certs_dir }}/fragments"
    state: absent
