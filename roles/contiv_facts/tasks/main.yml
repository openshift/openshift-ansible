---
- name: Determine if CoreOS
  raw: "grep '^NAME=' /etc/os-release | sed s'/NAME=//'"
  register: distro
  check_mode: no

- name: Init the is_coreos fact
  set_fact:
    is_coreos: false

- name: Set the is_coreos fact
  set_fact:
    is_coreos: true
  when: "'CoreOS' in distro.stdout"

- name: Set docker config file directory
  set_fact:
    docker_config_dir: "/etc/sysconfig"

- name: Override docker config file directory for Debian
  set_fact:
    docker_config_dir: "/etc/default"
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

- name: Create config file directory
  file:
    path: "{{ docker_config_dir }}"
    state: directory

- name: Set the bin directory path for CoreOS
  set_fact:
    bin_dir: "/opt/bin"
  when: is_coreos

- name: Create the directory used to store binaries
  file:
    path: "{{ bin_dir }}"
    state: directory

- name: Create Ansible temp directory
  file:
    path: "{{ ansible_temp_dir }}"
    state: directory

- name: Determine if has rpm
  stat: path=/usr/bin/rpm
  register: s
  changed_when: false
  check_mode: no

- name: Init the has_rpm fact
  set_fact:
    has_rpm: false

- name: Set the has_rpm fact
  set_fact:
    has_rpm: true
  when: s.stat.exists

- name: Init the has_firewalld fact
  set_fact:
    has_firewalld: false

- name: Init the has_iptables fact
  set_fact:
    has_iptables: false

# collect information about what packages are installed
- include_tasks: rpm.yml
  when: has_rpm

- include_tasks: fedora-install.yml
  when: not openshift_is_atomic and ansible_distribution == "Fedora"
