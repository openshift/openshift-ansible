---
- fail:
    msg: Flannel can not be used with openshift sdn
  when: openshift_use_openshift_sdn | default(false) | bool and openshift_use_flannel | default(false) | bool

- fail:
   msg: Nuage sdn can not be used with openshift sdn
  when: openshift_use_openshift_sdn | default(false) | bool and openshift_use_nuage | default(false) | bool

- fail:
   msg: Nuage sdn can not be used with flannel
  when: openshift_use_flannel | default(false) | bool and openshift_use_nuage | default(false) | bool

- fail:
    msg: openshift_hostname must be 64 characters or less
  when: openshift_hostname is defined and openshift_hostname | length > 64

- name: Set common Cluster facts
  openshift_facts:
    role: common
    local_facts:
      debug_level: "{{ openshift_debug_level | default(2) }}"
      install_examples: "{{ openshift_install_examples | default(True) }}"
      use_openshift_sdn: "{{ openshift_use_openshift_sdn | default(None) }}"
      sdn_network_plugin_name: "{{ os_sdn_network_plugin_name | default(None) }}"
      use_flannel: "{{ openshift_use_flannel | default(None) }}"
      use_nuage: "{{ openshift_use_nuage | default(None) }}"
      use_manageiq: "{{ openshift_use_manageiq | default(None) }}"
      data_dir: "{{ openshift_data_dir | default(None) }}"

- name: Gather current version of docker
  command: >
    rpm -q docker --queryformat '%{version}'
  register: installed_docker
  failed_when: false
  changed_when: false
  
- name: Gather latest version of common package
  shell: >
    yum list available -e 0 -q "{{ openshift.common.service_type}}" 2>&1 | tail -n +2 | awk '{ print $2 }' | sort -r | tr '\n' ' ' | tail -n 1 | cut -d '.' -f1,2
  register: latest_package
  failed_when: false
  changed_when: false

- name: Downgrade docker to 1.8.2 if we're installing a version older than 3.2
  command: >
    {{ ansible_pkg_mgr }} -y downgrade docker-1.8.2
  notify: restart docker
  when: " '1.9' in installed_docker.stdout and latest_package.stdout in ['3.0','3.1'] "

- name: Install the base package for versioning
  action: "{{ ansible_pkg_mgr }} name={{ openshift.common.service_type }}{{ openshift_version | default('') }} state=present"
  when: not openshift.common.is_containerized | bool

# This invocation also updates the version facts which are necessary
# for setting the hostname below.
- name: openshift_facts
  openshift_facts:
    role: hosted
    openshift_env: "{{ hostvars[inventory_hostname] | oo_openshift_env }}"

# For enterprise versions < 3.1 and origin versions < 1.1 we want to set the
# hostname by default.
- set_fact:
    set_hostname_default: "{{ not openshift.common.version_gte_3_1_or_1_1 }}"

- name: Set hostname
  command: >
    hostnamectl set-hostname {{ openshift.common.hostname }}
  when: openshift_set_hostname | default(set_hostname_default) | bool
