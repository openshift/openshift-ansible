---
- name: Create temp directory for doing work in
  command: mktemp -d /tmp/openshift-service-catalog-ansible-XXXXXX
  register: mktemp
  changed_when: False

- name: Set default image variables based on openshift_deployment_type
  include_vars: "{{ item }}"
  with_first_found:
  - "{{ openshift_deployment_type }}.yml"
  - "default_images.yml"

- name: Set service_catalog image facts
  set_fact:
    openshift_service_catalog_image_prefix: "{{ openshift_service_catalog_image_prefix | default(__openshift_service_catalog_image_prefix) }}"
    openshift_service_catalog_image_version: "{{ openshift_service_catalog_image_version | default(__openshift_service_catalog_image_version) }}"

- set_fact:
    generated_certs_dir: "{{ openshift.common.config_base }}/service-catalog"

- slurp:
    src: "{{ generated_certs_dir }}/ca.crt"
  register: apiserver_ca

- name: Checking for master.etcd-ca.crt
  stat:
    path: /etc/origin/master/master.etcd-ca.crt
    get_checksum: false
    get_attributes: false
    get_mime: false
  register: etcd_ca_crt
  check_mode: no

- template:
    src: api_server.j2
    dest: "{{ mktemp.stdout }}/service_catalog_api_server.yml"
  vars:
    image: ""
    namespace: ""
    cpu_limit: none
    memory_limit: none
    cpu_requests: none
    memory_request: none
    cors_allowed_origin: localhost
    etcd_servers: "{{ openshift_master_etcd_urls | join(',') }}"
    etcd_cafile: "{{ '/etc/origin/master/master.etcd-ca.crt' if etcd_ca_crt.stat.exists else '/etc/origin/master/ca-bundle.crt' }}"
    node_selector: {'node-role.kubernetes.io/master': 'true'}
    ca_hash: "{{ apiserver_ca.content|hash('sha1') }}"

- name: Set Service Catalog API Server daemonset
  oc_obj:
    state: present
    namespace: "kube-service-catalog"
    kind: daemonset
    name: apiserver
    force: true
    files:
    - "{{ mktemp.stdout }}/service_catalog_api_server.yml"
    delete_after: yes

# Delete current pods so that they get respawned with new ds args.
- oc_obj:
    kind: po
    namespace: "kube-service-catalog"
    state: absent
    selector: "app=apiserver"
